name: "CI-CD_with_Helm"

on:
  # push:
  #   branches:
  #     - main

  workflow_dispatch:
    # ${{ github.event.inputs.ImageVersion }}
    inputs:
      ImageVersion:
        description: 'Image Version :'     
        #required: true
      
      HelmVersion:
        description: 'Helm Version :'     
        #required: true

env:
  CLUSTER_NAME: contoso-video
  RESOURCE_GROUP: mslearn-gh-pipelines-5163
  NAMESPACE: index-app-ns
  IMAGE_NAME: index-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout repository"
      uses: actions/checkout@master
    
    - uses: Azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: "Build and push to container registry"
      run: |
        docker build . -t ${{ secrets.ACR_URL }}/${{env.IMAGE_NAME}}:${{ github.sha }}
        docker push ${{ secrets.ACR_URL }}/${{env.IMAGE_NAME}}:${{ github.sha }}
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: "Get code from github repo"
      uses: actions/checkout@master

    - name: "Set the target AKS cluster"
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURCE_GROUP }}

    ### HELM COMMANDS

    - name: Install Helm
      uses: Azure/setup-helm@v1
      with:
        version: v3.7.1

    # - name: Run Helm Deploy
    #   run: |
    #     helm upgrade \
    #       --install \
    #       --create-namespace \
    #       --atomic \
    #       --wait \
    #       --namespace ${{ env.NAMESPACE }} \
    #       index-app \
    #       ./helm-charts/index-app \
    #       --set namespace=${{ env.NAMESPACE }} \
    #       --set image.repository=${{ secrets.ACR_URL }} \
    #       --set image.name=${{ env.IMAGE_NAME }} \
    #       --set image.tag=${{ github.sha }} 

    - name: Helm Dry Run
      run: |
        helm upgrade \
            --dry-run \
            --install \
            --create-namespace \
            --namespace index-app-ns \
            --atomic \
            --wait \
            -f ./helm-charts/index-app/values_overwrite.yaml \
            index-app \
            ./helm-charts/index-app

    - name: Helm Package
      run: |
        helm package \
            --dependency-update \
            --app-version 1.0.0-${{ github.sha }} \
            --version 1.0-${{ github.sha }} \
            ./helm-charts/index-app

    - name: Authenticate with the registry
      run: |
        export HELM_EXPERIMENTAL_OCI=1
        helm registry login \
            contosocontainerregistry5320.azurecr.io \
            --username ContosoContainerRegistry5320 \
            --password kSlRJs=8SKUXe50jUBoGiYFod086webv

    - name: Push chart to registry as OCI artifact
      run: |
        helm push \
        index-app-1.0-${{ github.sha }}.tgz \
        oci://contosocontainerregistry5320.azurecr.io/helm

    - name: List charts in the repository
      run: |
        az acr repository show \
          --name contosocontainerregistry5320 \
          --repository helm/index-app

    - name: Install / Upgrade helm chart
      run: |
        helm upgrade \
            --install \
            --create-namespace \
            --namespace index-app-ns \
            --atomic \
            --wait \
            index-app \
            oci://contosocontainerregistry5320.azurecr.io/helm/index-app --version 1.0-${{ github.sha }}

    # - name: Description
    #   run: |
    #     <command>